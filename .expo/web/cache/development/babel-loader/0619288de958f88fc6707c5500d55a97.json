{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nrequire('node-libs-expo/globals');\n\nimport 'react-native-get-random-values';\nimport 'react-native-url-polyfill/auto';\nimport 'text-encoding';\nimport \"./global\";\nimport fetch from 'cross-fetch';\nglobal.fetch = fetch;\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { StoreProvider } from 'easy-peasy';\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport { BottomSheetModalProvider } from '@gorhom/bottom-sheet';\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport { theme } from \"./core/theme\";\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport store from \"./store\";\nimport Navigation from \"./navigation\";\nimport AppContext from \"./components/AppContext\";\nimport * as Sentry from 'sentry-expo';\nvar routingInstrumentation = new Sentry.Native.ReactNavigationInstrumentation();\nconsole.log('routingInstrumentation: ', routingInstrumentation);\nSentry.init({\n  dsn: 'https://ce6bd4fa297b4fe6bde317c0c845afa2@o1252019.ingest.sentry.io/6446852',\n  enableInExpoDevelopment: true,\n  debug: true,\n  enableAutoSessionTracking: true,\n  sessionTrackingIntervalMillis: 10000,\n  integrations: [new Sentry.Native.ReactNativeTracing({\n    tracingOrigins: ['localhost', /^\\//, /^https:\\/\\//],\n    routingInstrumentation: routingInstrumentation\n  })]\n});\nLogBox.ignoreAllLogs(true);\nexport default function App() {\n  var isLoadingComplete = useCachedResources();\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      globalActiveWallet = _useState2[0],\n      setGlobalActiveWallet = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      globalPreviousActiveWallet = _useState4[0],\n      setGlobalPreviousActiveWallet = _useState4[1];\n\n  var globalActions = {\n    globalActiveWallet: globalActiveWallet,\n    globalPreviousActiveWallet: globalPreviousActiveWallet,\n    setGlobalActiveWallet: setGlobalActiveWallet,\n    setGlobalPreviousActiveWallet: setGlobalPreviousActiveWallet\n  };\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return React.createElement(AppContext.Provider, {\n      value: globalActions\n    }, React.createElement(StoreProvider, {\n      store: store\n    }, React.createElement(PaperProvider, {\n      theme: theme\n    }, React.createElement(BottomSheetModalProvider, null, React.createElement(Navigation, null), React.createElement(StatusBar, null)))));\n  }\n}","map":{"version":3,"names":["require","fetch","global","StatusBar","React","useState","StoreProvider","BottomSheetModalProvider","Provider","PaperProvider","theme","useCachedResources","store","Navigation","AppContext","Sentry","routingInstrumentation","Native","ReactNavigationInstrumentation","console","log","init","dsn","enableInExpoDevelopment","debug","enableAutoSessionTracking","sessionTrackingIntervalMillis","integrations","ReactNativeTracing","tracingOrigins","LogBox","ignoreAllLogs","App","isLoadingComplete","globalActiveWallet","setGlobalActiveWallet","globalPreviousActiveWallet","setGlobalPreviousActiveWallet","globalActions"],"sources":["/workspace/stream-pay-mobile-wallet-app/App.tsx"],"sourcesContent":["require('node-libs-expo/globals');\nimport 'react-native-get-random-values';\nimport 'react-native-url-polyfill/auto';\nimport 'text-encoding';\nimport './global';\nimport fetch from 'cross-fetch';\nglobal.fetch = fetch;\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { StoreProvider } from 'easy-peasy';\nimport { LogBox, View, Text } from 'react-native';\nimport bs58 from 'bs58';\nimport { BottomSheetModalProvider } from '@gorhom/bottom-sheet';\n\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport { theme } from './core/theme';\nimport useCachedResources from './hooks/useCachedResources';\nimport store from './store';\nimport Navigation from './navigation';\n\nimport AppContext from './components/AppContext';\nimport * as Sentry from 'sentry-expo';\n\nconst routingInstrumentation =\n\tnew Sentry.Native.ReactNavigationInstrumentation();\nconsole.log('routingInstrumentation: ', routingInstrumentation);\n\nSentry.init({\n\tdsn: 'https://ce6bd4fa297b4fe6bde317c0c845afa2@o1252019.ingest.sentry.io/6446852',\n\tenableInExpoDevelopment: true,\n\tdebug: true,\n\tenableAutoSessionTracking: true,\n\t// Sessions close after app is 10 seconds in the background.\n\tsessionTrackingIntervalMillis: 10000,\n\tintegrations: [\n\t\tnew Sentry.Native.ReactNativeTracing({\n\t\t\ttracingOrigins: ['localhost', /^\\//, /^https:\\/\\//],\n\t\t\troutingInstrumentation,\n\t\t}),\n\t],\n});\n\n// Access any @sentry/react-native exports via:\n// Sentry.Native.*\n\n// Access any @sentry/browser exports via:\n// Sentry.Browser.*\n\nLogBox.ignoreAllLogs(true);\n\nexport default function App() {\n\tconst isLoadingComplete = useCachedResources();\n\tconst [globalActiveWallet, setGlobalActiveWallet] = useState(0);\n\tconst [globalPreviousActiveWallet, setGlobalPreviousActiveWallet] =\n\t\tuseState(0);\n\n\tconst globalActions = {\n\t\tglobalActiveWallet: globalActiveWallet,\n\t\tglobalPreviousActiveWallet: globalPreviousActiveWallet,\n\t\tsetGlobalActiveWallet,\n\t\tsetGlobalPreviousActiveWallet,\n\t};\n\n\tif (!isLoadingComplete) {\n\t\treturn null;\n\t} else {\n\t\t// return (\n\t\t// \t<View>\n\t\t// \t\t<Text>helloo</Text>\n\t\t// \t</View>\n\t\t// );\n\t\treturn (\n\t\t\t<AppContext.Provider value={globalActions}>\n\t\t\t\t<StoreProvider store={store}>\n\t\t\t\t\t<PaperProvider theme={theme}>\n\t\t\t\t\t\t<BottomSheetModalProvider>\n\t\t\t\t\t\t\t<Navigation />\n\t\t\t\t\t\t\t<StatusBar />\n\t\t\t\t\t\t</BottomSheetModalProvider>\n\t\t\t\t\t</PaperProvider>\n\t\t\t\t</StoreProvider>\n\t\t\t</AppContext.Provider>\n\t\t);\n\t}\n}\n"],"mappings":";;AAAAA,OAAO,CAAC,wBAAD,CAAP;;AACA,OAAO,gCAAP;AACA,OAAO,gCAAP;AACA,OAAO,eAAP;AACA;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACAC,MAAM,CAACD,KAAP,GAAeA,KAAf;AACA,SAASE,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,YAA9B;;AAGA,SAASC,wBAAT,QAAyC,sBAAzC;AAEA,SAASC,QAAQ,IAAIC,aAArB,QAA0C,oBAA1C;AACA,SAASC,KAAT;AACA,OAAOC,kBAAP;AACA,OAAOC,KAAP;AACA,OAAOC,UAAP;AAEA,OAAOC,UAAP;AACA,OAAO,KAAKC,MAAZ,MAAwB,aAAxB;AAEA,IAAMC,sBAAsB,GAC3B,IAAID,MAAM,CAACE,MAAP,CAAcC,8BAAlB,EADD;AAEAC,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCJ,sBAAxC;AAEAD,MAAM,CAACM,IAAP,CAAY;EACXC,GAAG,EAAE,4EADM;EAEXC,uBAAuB,EAAE,IAFd;EAGXC,KAAK,EAAE,IAHI;EAIXC,yBAAyB,EAAE,IAJhB;EAMXC,6BAA6B,EAAE,KANpB;EAOXC,YAAY,EAAE,CACb,IAAIZ,MAAM,CAACE,MAAP,CAAcW,kBAAlB,CAAqC;IACpCC,cAAc,EAAE,CAAC,WAAD,EAAc,KAAd,EAAqB,aAArB,CADoB;IAEpCb,sBAAsB,EAAtBA;EAFoC,CAArC,CADa;AAPH,CAAZ;AAqBAc,MAAM,CAACC,aAAP,CAAqB,IAArB;AAEA,eAAe,SAASC,GAAT,GAAe;EAC7B,IAAMC,iBAAiB,GAAGtB,kBAAkB,EAA5C;;EACA,gBAAoDN,QAAQ,CAAC,CAAD,CAA5D;EAAA;EAAA,IAAO6B,kBAAP;EAAA,IAA2BC,qBAA3B;;EACA,iBACC9B,QAAQ,CAAC,CAAD,CADT;EAAA;EAAA,IAAO+B,0BAAP;EAAA,IAAmCC,6BAAnC;;EAGA,IAAMC,aAAa,GAAG;IACrBJ,kBAAkB,EAAEA,kBADC;IAErBE,0BAA0B,EAAEA,0BAFP;IAGrBD,qBAAqB,EAArBA,qBAHqB;IAIrBE,6BAA6B,EAA7BA;EAJqB,CAAtB;;EAOA,IAAI,CAACJ,iBAAL,EAAwB;IACvB,OAAO,IAAP;EACA,CAFD,MAEO;IAMN,OACC,oBAAC,UAAD,CAAY,QAAZ;MAAqB,KAAK,EAAEK;IAA5B,GACC,oBAAC,aAAD;MAAe,KAAK,EAAE1B;IAAtB,GACC,oBAAC,aAAD;MAAe,KAAK,EAAEF;IAAtB,GACC,oBAAC,wBAAD,QACC,oBAAC,UAAD,OADD,EAEC,oBAAC,SAAD,OAFD,CADD,CADD,CADD,CADD;EAYA;AACD"},"metadata":{},"sourceType":"module"}