{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"errorText\"];\nimport React, { memo } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { TextInput as Input } from \"react-native-paper\";\nimport { theme } from \"../core/theme\";\n\nvar TextInput = function TextInput(_ref) {\n  var errorText = _ref.errorText,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Input, _extends({\n    style: styles.input,\n    selectionColor: theme.colors.primary,\n    underlineColor: \"transparent\",\n    mode: \"outlined\"\n  }, props)), errorText ? React.createElement(Text, {\n    style: styles.error\n  }, errorText) : null);\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    marginVertical: 12,\n    borderColor: theme.colors.selection_border\n  },\n  input: {\n    backgroundColor: theme.colors.surface,\n    color: \"#000\"\n  },\n  error: {\n    fontSize: 14,\n    color: theme.colors.error,\n    paddingHorizontal: 4,\n    paddingTop: 4\n  }\n});\nexport default memo(TextInput);","map":{"version":3,"names":["React","memo","TextInput","Input","theme","errorText","props","styles","container","input","colors","primary","error","StyleSheet","create","width","marginVertical","borderColor","selection_border","backgroundColor","surface","color","fontSize","paddingHorizontal","paddingTop"],"sources":["/workspace/stream-pay-mobile-wallet-app/components/TextInput.tsx"],"sourcesContent":["import React, { memo } from \"react\";\nimport { View, StyleSheet, Text } from \"react-native\";\nimport { TextInput as Input } from \"react-native-paper\";\nimport { theme } from \"../core/theme\";\n\ntype Props = React.ComponentProps<typeof Input> & { errorText?: string };\n\n\n\n\n\nconst TextInput = ({ errorText, ...props }: Props) => (\n  <View style={styles.container}>\n    <Input\n      style={styles.input}\n      selectionColor={theme.colors.primary}\n      underlineColor=\"transparent\"\n      mode=\"outlined\"\n      {...props}\n    />\n    {errorText ? <Text style={styles.error}>{errorText}</Text> : null}\n  </View>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    marginVertical: 12,\n    borderColor: theme.colors.selection_border\n  },\n  input: {\n    backgroundColor: theme.colors.surface,\n    color: \"#000\"\n  },\n  error: {\n    fontSize: 14,\n    color: theme.colors.error,\n    paddingHorizontal: 4,\n    paddingTop: 4,\n  },\n});\n\nexport default memo(TextInput);\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;;;;AAEA,SAASC,SAAS,IAAIC,KAAtB,QAAmC,oBAAnC;AACA,SAASC,KAAT;;AAQA,IAAMF,SAAS,GAAG,SAAZA,SAAY;EAAA,IAAGG,SAAH,QAAGA,SAAH;EAAA,IAAiBC,KAAjB;;EAAA,OAChB,oBAAC,IAAD;IAAM,KAAK,EAAEC,MAAM,CAACC;EAApB,GACE,oBAAC,KAAD;IACE,KAAK,EAAED,MAAM,CAACE,KADhB;IAEE,cAAc,EAAEL,KAAK,CAACM,MAAN,CAAaC,OAF/B;IAGE,cAAc,EAAC,aAHjB;IAIE,IAAI,EAAC;EAJP,GAKML,KALN,EADF,EAQGD,SAAS,GAAG,oBAAC,IAAD;IAAM,KAAK,EAAEE,MAAM,CAACK;EAApB,GAA4BP,SAA5B,CAAH,GAAmD,IAR/D,CADgB;AAAA,CAAlB;;AAaA,IAAME,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;EAC/BN,SAAS,EAAE;IACTO,KAAK,EAAE,MADE;IAETC,cAAc,EAAE,EAFP;IAGTC,WAAW,EAAEb,KAAK,CAACM,MAAN,CAAaQ;EAHjB,CADoB;EAM/BT,KAAK,EAAE;IACLU,eAAe,EAAEf,KAAK,CAACM,MAAN,CAAaU,OADzB;IAELC,KAAK,EAAE;EAFF,CANwB;EAU/BT,KAAK,EAAE;IACLU,QAAQ,EAAE,EADL;IAELD,KAAK,EAAEjB,KAAK,CAACM,MAAN,CAAaE,KAFf;IAGLW,iBAAiB,EAAE,CAHd;IAILC,UAAU,EAAE;EAJP;AAVwB,CAAlB,CAAf;AAkBA,eAAevB,IAAI,CAACC,SAAD,CAAnB"},"metadata":{},"sourceType":"module"}